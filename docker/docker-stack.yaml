version: '3.7'

networks:
  athenz-net:
    # external: true
    name: ${DOCKER_NETWORK}
    attachable: true
    ipam:
      config:
        - subnet: "172.21.0.0/16"

services:

  zms-db:
    image: athenz-zms-db
    environment:
      MYSQL_ROOT_PASSWORD: ${ZMS_DB_ROOT_PASS}
    ports:
      - target: ${ZMS_DB_PORT}
        published: ${ZMS_DB_PORT}
        protocol: tcp
        mode: host
    networks:
      athenz-net:
        aliases:
          - ${ZMS_DB_HOST}
    volumes:
      - ./db/zms/zms-db.cnf:/etc/mysql/conf.d/zms-db.cnf
      - ./db/zms/zms-db.cnf:/etc/my.cnf"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--protocol=TCP", "--password=${ZMS_DB_ROOT_PASS}"]
      start_period: 15s
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      restart_policy:
        condition: any
        max_attempts: 3
      placement:
        constraints:
          - node.role==manager
  zts-db:
    image: athenz-zts-db
    environment:
      MYSQL_ROOT_PASSWORD: ${ZTS_DB_ROOT_PASS}
    ports:
      - target: ${ZTS_DB_PORT}
        published: ${ZTS_DB_PORT}
        protocol: tcp
        mode: host
    networks:
      athenz-net:
        aliases:
          - ${ZTS_DB_HOST}
    volumes:
      - ./db/zts/zts-db.cnf:/etc/mysql/conf.d/zts-db.cnf
      - ./db/zts/zts-db.cnf:/etc/my.cnf"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--protocol=TCP", "--password=${ZTS_DB_ROOT_PASS}"]
      start_period: 15s
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      restart_policy:
        condition: any
        max_attempts: 3
      placement:
        constraints:
          - node.role==manager

  zms-server:
    image: athenz-zms-server
    depends_on:
      - zms-db
    environment:
      ZMS_DB_ADMIN_PASS: ${ZMS_DB_ADMIN_PASS}
      ZMS_KEYSTORE_PASS: ${ZMS_KEYSTORE_PASS}
      ZMS_TRUSTSTORE_PASS: ${ZMS_TRUSTSTORE_PASS}
    ports:
      - target: ${ZMS_PORT}
        published: ${ZMS_PORT}
        protocol: tcp
        mode: host
    networks:
      athenz-net:
        aliases:
          - ${ZMS_HOST}
    volumes:
      - ./zms/var:/opt/athenz/zms/var
      - ./zms/conf:/opt/athenz/zms/conf/zms_server
      - ./logs/zms:/opt/athenz/zms/logs/zms_server
    # healthcheck:
    #   test: ["CMD", "curl", "-k", "-s", "https://localhost:${ZMS_PORT}/zms/v1/status"]
    #   start_period: 15s
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    deploy:
      restart_policy:
        condition: any
        max_attempts: 3
      placement:
        constraints:
          - node.role==manager
  zts-server:
    image: athenz-zts-server
    depends_on:
      - zts-db
      - zms-server
    environment:
      ZTS_DB_ADMIN_PASS: ${ZTS_DB_ADMIN_PASS}
      ZTS_KEYSTORE_PASS: ${ZTS_KEYSTORE_PASS}
      ZTS_TRUSTSTORE_PASS: ${ZTS_TRUSTSTORE_PASS}
      ZTS_SIGNER_KEYSTORE_PASS: ${ZTS_SIGNER_KEYSTORE_PASS}
      ZTS_SIGNER_TRUSTSTORE_PASS: ${ZTS_SIGNER_TRUSTSTORE_PASS}
    ports:
      - target: ${ZTS_PORT}
        published: ${ZTS_PORT}
        protocol: tcp
        mode: host
    networks:
      athenz-net:
        aliases:
          - ${ZTS_HOST}
    volumes:
      - ./zts/var:/opt/athenz/zts/var
      - ./zts/conf:/opt/athenz/zts/conf/zts_server
      - ./logs/zts:/opt/athenz/zts/logs/zts_server
    # healthcheck:
    #   test: ["CMD", "curl", "-k", "-s", "https://localhost:${ZTS_PORT}/zts/v1/status"]
    #   start_period: 15s
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    deploy:
      restart_policy:
        condition: any
        max_attempts: 3
      placement:
        constraints:
          - node.role==manager

  ui:
    image: athenz-ui
    depends_on:
      - zms
      - zts
    environment:
      ZMS_SERVER_URL: "https://${ZMS_HOST}:${ZMS_PORT}/zms/v1/"
      ZMS_AJAX_URL: "https://${HOSTNAME}:${ZMS_PORT}/zms/v1/"
      UI_SERVER: ${HOSTNAME}
    ports:
      - target: ${UI_PORT}
        published: ${UI_PORT}
        protocol: tcp
        mode: host
    networks:
      athenz-net:
        aliases:
          - ${UI_HOST}
    volumes:
      - ./zts/conf/athenz.conf:/opt/athenz/ui/config/athenz.conf
      - ./ui/var/certs/ui_key.pem:/opt/athenz/ui/keys/ui_key.pem
      - ./ui/var/certs/ui_cert.pem:/opt/athenz/ui/keys/ui_cert.pem
      - ./ui/var/keys/athenz.ui-server.pem:/opt/athenz/ui/keys/athenz.ui-server.pem
      - ./ui/var/keys/athenz.ui-server_pub.pem:/opt/athenz/ui/keys/athenz.ui-server_pub.pem
    deploy:
      restart_policy:
        condition: any
        max_attempts: 3
      placement:
        constraints:
          - node.role==manager
