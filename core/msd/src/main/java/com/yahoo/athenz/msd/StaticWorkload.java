//
// This file generated by rdl 1.5.2. Do not modify!
//

package com.yahoo.athenz.msd;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import java.util.List;
import com.yahoo.rdl.*;

//
// StaticWorkload - workload type describing workload indirectly associated
// with an identity ( without bootstrap )
//
@JsonIgnoreProperties(ignoreUnknown = true)
public class StaticWorkload {
    public String domainName;
    public String serviceName;
    public StaticWorkloadType type;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public List<String> ipAddresses;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String name;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public Timestamp updateTime;

    public StaticWorkload setDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }
    public String getDomainName() {
        return domainName;
    }
    public StaticWorkload setServiceName(String serviceName) {
        this.serviceName = serviceName;
        return this;
    }
    public String getServiceName() {
        return serviceName;
    }
    public StaticWorkload setType(StaticWorkloadType type) {
        this.type = type;
        return this;
    }
    public StaticWorkloadType getType() {
        return type;
    }
    public StaticWorkload setIpAddresses(List<String> ipAddresses) {
        this.ipAddresses = ipAddresses;
        return this;
    }
    public List<String> getIpAddresses() {
        return ipAddresses;
    }
    public StaticWorkload setName(String name) {
        this.name = name;
        return this;
    }
    public String getName() {
        return name;
    }
    public StaticWorkload setUpdateTime(Timestamp updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    public Timestamp getUpdateTime() {
        return updateTime;
    }

    @Override
    public boolean equals(Object another) {
        if (this != another) {
            if (another == null || another.getClass() != StaticWorkload.class) {
                return false;
            }
            StaticWorkload a = (StaticWorkload) another;
            if (domainName == null ? a.domainName != null : !domainName.equals(a.domainName)) {
                return false;
            }
            if (serviceName == null ? a.serviceName != null : !serviceName.equals(a.serviceName)) {
                return false;
            }
            if (type == null ? a.type != null : !type.equals(a.type)) {
                return false;
            }
            if (ipAddresses == null ? a.ipAddresses != null : !ipAddresses.equals(a.ipAddresses)) {
                return false;
            }
            if (name == null ? a.name != null : !name.equals(a.name)) {
                return false;
            }
            if (updateTime == null ? a.updateTime != null : !updateTime.equals(a.updateTime)) {
                return false;
            }
        }
        return true;
    }
}
