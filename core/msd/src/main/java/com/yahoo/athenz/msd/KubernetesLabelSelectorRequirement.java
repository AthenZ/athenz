//
// This file generated by rdl 1.5.2. Do not modify!
//

package com.yahoo.athenz.msd;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import java.util.List;
import com.yahoo.rdl.*;

//
// KubernetesLabelSelectorRequirement - A label selector requirement is a
// selector that contains values, a key, and an operator that relates the key
// and values.
//
@JsonIgnoreProperties(ignoreUnknown = true)
public class KubernetesLabelSelectorRequirement {
    public String key;
    public String operator;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public List<String> values;

    public KubernetesLabelSelectorRequirement setKey(String key) {
        this.key = key;
        return this;
    }
    public String getKey() {
        return key;
    }
    public KubernetesLabelSelectorRequirement setOperator(String operator) {
        this.operator = operator;
        return this;
    }
    public String getOperator() {
        return operator;
    }
    public KubernetesLabelSelectorRequirement setValues(List<String> values) {
        this.values = values;
        return this;
    }
    public List<String> getValues() {
        return values;
    }

    @Override
    public boolean equals(Object another) {
        if (this != another) {
            if (another == null || another.getClass() != KubernetesLabelSelectorRequirement.class) {
                return false;
            }
            KubernetesLabelSelectorRequirement a = (KubernetesLabelSelectorRequirement) another;
            if (key == null ? a.key != null : !key.equals(a.key)) {
                return false;
            }
            if (operator == null ? a.operator != null : !operator.equals(a.operator)) {
                return false;
            }
            if (values == null ? a.values != null : !values.equals(a.values)) {
                return false;
            }
        }
        return true;
    }
}
