//
// This file generated by rdl 1.5.2. Do not modify!
//

package com.yahoo.athenz.msd;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.List;
import java.util.Map;
import com.yahoo.rdl.*;

//
// KubernetesLabelSelector - A label selector is a label query over a set of
// resources. The result of matchLabels and matchExpressions are ANDed. An empty
// label selector matches all objects. A null label selector matches no objects.
//
@JsonIgnoreProperties(ignoreUnknown = true)
public class KubernetesLabelSelector {
    public List<KubernetesLabelSelectorRequirement> matchExpressions;
    public Map<String, String> matchLabels;

    public KubernetesLabelSelector setMatchExpressions(List<KubernetesLabelSelectorRequirement> matchExpressions) {
        this.matchExpressions = matchExpressions;
        return this;
    }
    public List<KubernetesLabelSelectorRequirement> getMatchExpressions() {
        return matchExpressions;
    }
    public KubernetesLabelSelector setMatchLabels(Map<String, String> matchLabels) {
        this.matchLabels = matchLabels;
        return this;
    }
    public Map<String, String> getMatchLabels() {
        return matchLabels;
    }

    @Override
    public boolean equals(Object another) {
        if (this != another) {
            if (another == null || another.getClass() != KubernetesLabelSelector.class) {
                return false;
            }
            KubernetesLabelSelector a = (KubernetesLabelSelector) another;
            if (matchExpressions == null ? a.matchExpressions != null : !matchExpressions.equals(a.matchExpressions)) {
                return false;
            }
            if (matchLabels == null ? a.matchLabels != null : !matchLabels.equals(a.matchLabels)) {
                return false;
            }
        }
        return true;
    }
}
