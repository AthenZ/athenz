//
// This file generated by rdl 1.5.2. Do not modify!
//

package com.yahoo.athenz.msd;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.yahoo.rdl.*;

//
// TransportPolicyIngressRule - Transport policy ingress rule
//
@JsonIgnoreProperties(ignoreUnknown = true)
public class TransportPolicyIngressRule {
    public long id;
    public Timestamp lastModified;
    public TransportPolicyEntitySelector entitySelector;
    public TransportPolicyPeer from;

    public TransportPolicyIngressRule setId(long id) {
        this.id = id;
        return this;
    }
    public long getId() {
        return id;
    }
    public TransportPolicyIngressRule setLastModified(Timestamp lastModified) {
        this.lastModified = lastModified;
        return this;
    }
    public Timestamp getLastModified() {
        return lastModified;
    }
    public TransportPolicyIngressRule setEntitySelector(TransportPolicyEntitySelector entitySelector) {
        this.entitySelector = entitySelector;
        return this;
    }
    public TransportPolicyEntitySelector getEntitySelector() {
        return entitySelector;
    }
    public TransportPolicyIngressRule setFrom(TransportPolicyPeer from) {
        this.from = from;
        return this;
    }
    public TransportPolicyPeer getFrom() {
        return from;
    }

    @Override
    public boolean equals(Object another) {
        if (this != another) {
            if (another == null || another.getClass() != TransportPolicyIngressRule.class) {
                return false;
            }
            TransportPolicyIngressRule a = (TransportPolicyIngressRule) another;
            if (id != a.id) {
                return false;
            }
            if (lastModified == null ? a.lastModified != null : !lastModified.equals(a.lastModified)) {
                return false;
            }
            if (entitySelector == null ? a.entitySelector != null : !entitySelector.equals(a.entitySelector)) {
                return false;
            }
            if (from == null ? a.from != null : !from.equals(a.from)) {
                return false;
            }
        }
        return true;
    }
}
