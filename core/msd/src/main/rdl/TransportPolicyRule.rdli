// Copyright The Athenz Authors
// Licensed under the terms of the Apache version 2.0 license. See LICENSE file for terms.

// TransportPolicyRule types
include "TransportPolicyRule.tdl";
include "Names.tdl";

// API endpoint to get the transport policy rules defined in Athenz
resource TransportPolicyRules GET "/transportpolicies" {
    authenticate;
    String matchingTag (header="If-None-Match"); //Retrieved from the previous request, this timestamp specifies to the server to return any policies modified since this time
    String tag (header="ETag", out); //The current latest modification timestamp is returned in this header
    expected OK, NOT_MODIFIED;
    exceptions {
        ResourceError BAD_REQUEST;
        ResourceError NOT_FOUND;
        ResourceError FORBIDDEN;
        ResourceError UNAUTHORIZED;
        ResourceError TOO_MANY_REQUESTS;
    }
}

// API to validate microsegmentation policies against network policies

resource TransportPolicyValidationResponse POST "/transportpolicy/validate" (name=validateTransportPolicy) {
    TransportPolicyValidationRequest transportPolicy ; // Struct representing microsegmentation policy entered by the user
    expected OK;
    authenticate;
    exceptions {
        ResourceError BAD_REQUEST;
        ResourceError NOT_FOUND;
        ResourceError FORBIDDEN;
        ResourceError UNAUTHORIZED;
        ResourceError TOO_MANY_REQUESTS;
    }
}

// API to get transport policy validation response for transport policies of a domain
resource TransportPolicyValidationResponseList GET "/domain/{domainName}/transportpolicy/validationstatus" (name=getTransportPolicyValidationStatus) {
    DomainName domainName; //name of the domain
    expected OK;
    authenticate;
    exceptions {
        ResourceError BAD_REQUEST;
        ResourceError NOT_FOUND;
        ResourceError FORBIDDEN;
        ResourceError UNAUTHORIZED;
        ResourceError TOO_MANY_REQUESTS;
    }
}
