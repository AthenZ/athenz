//
// This file generated by rdl 1.5.2. Do not modify!
//

package com.yahoo.athenz.zms;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.yahoo.rdl.*;

//
// ResourceRoleOwnership - The representation of the role ownership object
//
@JsonIgnoreProperties(ignoreUnknown = true)
public class ResourceRoleOwnership {
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String metaOwner;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String membersOwner;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String objectOwner;

    public ResourceRoleOwnership setMetaOwner(String metaOwner) {
        this.metaOwner = metaOwner;
        return this;
    }
    public String getMetaOwner() {
        return metaOwner;
    }
    public ResourceRoleOwnership setMembersOwner(String membersOwner) {
        this.membersOwner = membersOwner;
        return this;
    }
    public String getMembersOwner() {
        return membersOwner;
    }
    public ResourceRoleOwnership setObjectOwner(String objectOwner) {
        this.objectOwner = objectOwner;
        return this;
    }
    public String getObjectOwner() {
        return objectOwner;
    }

    @Override
    public boolean equals(Object another) {
        if (this != another) {
            if (another == null || another.getClass() != ResourceRoleOwnership.class) {
                return false;
            }
            ResourceRoleOwnership a = (ResourceRoleOwnership) another;
            if (metaOwner == null ? a.metaOwner != null : !metaOwner.equals(a.metaOwner)) {
                return false;
            }
            if (membersOwner == null ? a.membersOwner != null : !membersOwner.equals(a.membersOwner)) {
                return false;
            }
            if (objectOwner == null ? a.objectOwner != null : !objectOwner.equals(a.objectOwner)) {
                return false;
            }
        }
        return true;
    }
}
