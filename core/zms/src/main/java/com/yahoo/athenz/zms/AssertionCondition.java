//
// This file generated by rdl 1.5.2. Do not modify!
//

package com.yahoo.athenz.zms;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import java.util.Map;
import com.yahoo.rdl.*;

//
// AssertionCondition - A representation of condition associated with an
// assertion
//
@JsonIgnoreProperties(ignoreUnknown = true)
public class AssertionCondition {
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public Integer id;
    public Map<String, AssertionConditionData> conditionsMap;

    public AssertionCondition setId(Integer id) {
        this.id = id;
        return this;
    }
    public Integer getId() {
        return id;
    }
    public AssertionCondition setConditionsMap(Map<String, AssertionConditionData> conditionsMap) {
        this.conditionsMap = conditionsMap;
        return this;
    }
    public Map<String, AssertionConditionData> getConditionsMap() {
        return conditionsMap;
    }

    @Override
    public boolean equals(Object another) {
        if (this != another) {
            if (another == null || another.getClass() != AssertionCondition.class) {
                return false;
            }
            AssertionCondition a = (AssertionCondition) another;
            if (id == null ? a.id != null : !id.equals(a.id)) {
                return false;
            }
            if (conditionsMap == null ? a.conditionsMap != null : !conditionsMap.equals(a.conditionsMap)) {
                return false;
            }
        }
        return true;
    }
}
