//
// This file generated by rdl 1.5.2. Do not modify!
//

package com.yahoo.athenz.zms;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.yahoo.rdl.*;

//
// GroupAuditLog - An audit log entry for group membership change.
//
public class GroupAuditLog {
    public String member;
    public String admin;
    public Timestamp created;
    public String action;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String auditRef;

    public GroupAuditLog setMember(String member) {
        this.member = member;
        return this;
    }
    public String getMember() {
        return member;
    }
    public GroupAuditLog setAdmin(String admin) {
        this.admin = admin;
        return this;
    }
    public String getAdmin() {
        return admin;
    }
    public GroupAuditLog setCreated(Timestamp created) {
        this.created = created;
        return this;
    }
    public Timestamp getCreated() {
        return created;
    }
    public GroupAuditLog setAction(String action) {
        this.action = action;
        return this;
    }
    public String getAction() {
        return action;
    }
    public GroupAuditLog setAuditRef(String auditRef) {
        this.auditRef = auditRef;
        return this;
    }
    public String getAuditRef() {
        return auditRef;
    }

    @Override
    public boolean equals(Object another) {
        if (this != another) {
            if (another == null || another.getClass() != GroupAuditLog.class) {
                return false;
            }
            GroupAuditLog a = (GroupAuditLog) another;
            if (member == null ? a.member != null : !member.equals(a.member)) {
                return false;
            }
            if (admin == null ? a.admin != null : !admin.equals(a.admin)) {
                return false;
            }
            if (created == null ? a.created != null : !created.equals(a.created)) {
                return false;
            }
            if (action == null ? a.action != null : !action.equals(a.action)) {
                return false;
            }
            if (auditRef == null ? a.auditRef != null : !auditRef.equals(a.auditRef)) {
                return false;
            }
        }
        return true;
    }
}
