//
// This file generated by rdl 1.5.2. Do not modify!
//

package com.yahoo.athenz.zms;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.yahoo.rdl.*;

//
// ResourceServiceIdentityOwnership - The representation of the service
// identity ownership object
//
@JsonIgnoreProperties(ignoreUnknown = true)
public class ResourceServiceIdentityOwnership {
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String publicKeysOwner;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String hostsOwner;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String objectOwner;

    public ResourceServiceIdentityOwnership setPublicKeysOwner(String publicKeysOwner) {
        this.publicKeysOwner = publicKeysOwner;
        return this;
    }
    public String getPublicKeysOwner() {
        return publicKeysOwner;
    }
    public ResourceServiceIdentityOwnership setHostsOwner(String hostsOwner) {
        this.hostsOwner = hostsOwner;
        return this;
    }
    public String getHostsOwner() {
        return hostsOwner;
    }
    public ResourceServiceIdentityOwnership setObjectOwner(String objectOwner) {
        this.objectOwner = objectOwner;
        return this;
    }
    public String getObjectOwner() {
        return objectOwner;
    }

    @Override
    public boolean equals(Object another) {
        if (this != another) {
            if (another == null || another.getClass() != ResourceServiceIdentityOwnership.class) {
                return false;
            }
            ResourceServiceIdentityOwnership a = (ResourceServiceIdentityOwnership) another;
            if (publicKeysOwner == null ? a.publicKeysOwner != null : !publicKeysOwner.equals(a.publicKeysOwner)) {
                return false;
            }
            if (hostsOwner == null ? a.hostsOwner != null : !hostsOwner.equals(a.hostsOwner)) {
                return false;
            }
            if (objectOwner == null ? a.objectOwner != null : !objectOwner.equals(a.objectOwner)) {
                return false;
            }
        }
        return true;
    }
}
