//
// This file generated by rdl 1.5.2. Do not modify!
//

package com.yahoo.athenz.zts;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import java.util.List;
import com.yahoo.rdl.*;

//
// InstanceRefreshInformation -
//
@JsonIgnoreProperties(ignoreUnknown = true)
public class InstanceRefreshInformation {
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String attestationData;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String csr;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String ssh;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public SSHCertRequest sshCertRequest;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public Boolean token;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public Integer expiryTime;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String hostname;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public List<String> hostCnames;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public Boolean athenzJWK;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public Timestamp athenzJWKModified;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String namespace;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public String cloud;

    public InstanceRefreshInformation setAttestationData(String attestationData) {
        this.attestationData = attestationData;
        return this;
    }
    public String getAttestationData() {
        return attestationData;
    }
    public InstanceRefreshInformation setCsr(String csr) {
        this.csr = csr;
        return this;
    }
    public String getCsr() {
        return csr;
    }
    public InstanceRefreshInformation setSsh(String ssh) {
        this.ssh = ssh;
        return this;
    }
    public String getSsh() {
        return ssh;
    }
    public InstanceRefreshInformation setSshCertRequest(SSHCertRequest sshCertRequest) {
        this.sshCertRequest = sshCertRequest;
        return this;
    }
    public SSHCertRequest getSshCertRequest() {
        return sshCertRequest;
    }
    public InstanceRefreshInformation setToken(Boolean token) {
        this.token = token;
        return this;
    }
    public Boolean getToken() {
        return token;
    }
    public InstanceRefreshInformation setExpiryTime(Integer expiryTime) {
        this.expiryTime = expiryTime;
        return this;
    }
    public Integer getExpiryTime() {
        return expiryTime;
    }
    public InstanceRefreshInformation setHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    public String getHostname() {
        return hostname;
    }
    public InstanceRefreshInformation setHostCnames(List<String> hostCnames) {
        this.hostCnames = hostCnames;
        return this;
    }
    public List<String> getHostCnames() {
        return hostCnames;
    }
    public InstanceRefreshInformation setAthenzJWK(Boolean athenzJWK) {
        this.athenzJWK = athenzJWK;
        return this;
    }
    public Boolean getAthenzJWK() {
        return athenzJWK;
    }
    public InstanceRefreshInformation setAthenzJWKModified(Timestamp athenzJWKModified) {
        this.athenzJWKModified = athenzJWKModified;
        return this;
    }
    public Timestamp getAthenzJWKModified() {
        return athenzJWKModified;
    }
    public InstanceRefreshInformation setNamespace(String namespace) {
        this.namespace = namespace;
        return this;
    }
    public String getNamespace() {
        return namespace;
    }
    public InstanceRefreshInformation setCloud(String cloud) {
        this.cloud = cloud;
        return this;
    }
    public String getCloud() {
        return cloud;
    }

    @Override
    public boolean equals(Object another) {
        if (this != another) {
            if (another == null || another.getClass() != InstanceRefreshInformation.class) {
                return false;
            }
            InstanceRefreshInformation a = (InstanceRefreshInformation) another;
            if (attestationData == null ? a.attestationData != null : !attestationData.equals(a.attestationData)) {
                return false;
            }
            if (csr == null ? a.csr != null : !csr.equals(a.csr)) {
                return false;
            }
            if (ssh == null ? a.ssh != null : !ssh.equals(a.ssh)) {
                return false;
            }
            if (sshCertRequest == null ? a.sshCertRequest != null : !sshCertRequest.equals(a.sshCertRequest)) {
                return false;
            }
            if (token == null ? a.token != null : !token.equals(a.token)) {
                return false;
            }
            if (expiryTime == null ? a.expiryTime != null : !expiryTime.equals(a.expiryTime)) {
                return false;
            }
            if (hostname == null ? a.hostname != null : !hostname.equals(a.hostname)) {
                return false;
            }
            if (hostCnames == null ? a.hostCnames != null : !hostCnames.equals(a.hostCnames)) {
                return false;
            }
            if (athenzJWK == null ? a.athenzJWK != null : !athenzJWK.equals(a.athenzJWK)) {
                return false;
            }
            if (athenzJWKModified == null ? a.athenzJWKModified != null : !athenzJWKModified.equals(a.athenzJWKModified)) {
                return false;
            }
            if (namespace == null ? a.namespace != null : !namespace.equals(a.namespace)) {
                return false;
            }
            if (cloud == null ? a.cloud != null : !cloud.equals(a.cloud)) {
                return false;
            }
        }
        return true;
    }
}
