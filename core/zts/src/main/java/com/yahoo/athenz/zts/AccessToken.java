//
// This file generated by rdl 1.5.2. Do not modify!
//

package com.yahoo.athenz.zts;
import com.fasterxml.jackson.annotation.JsonInclude;
import java.util.List;
import com.yahoo.rdl.*;

//
// AccessToken -
//
public class AccessToken {
    public int ver;
    public String aud;
    public long exp;
    public long iat;
    public String iss;
    public String sub;
    public String cid;
    public String uid;
    @RdlOptional
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    public List<String> scp;

    public AccessToken setVer(int ver) {
        this.ver = ver;
        return this;
    }
    public int getVer() {
        return ver;
    }
    public AccessToken setAud(String aud) {
        this.aud = aud;
        return this;
    }
    public String getAud() {
        return aud;
    }
    public AccessToken setExp(long exp) {
        this.exp = exp;
        return this;
    }
    public long getExp() {
        return exp;
    }
    public AccessToken setIat(long iat) {
        this.iat = iat;
        return this;
    }
    public long getIat() {
        return iat;
    }
    public AccessToken setIss(String iss) {
        this.iss = iss;
        return this;
    }
    public String getIss() {
        return iss;
    }
    public AccessToken setSub(String sub) {
        this.sub = sub;
        return this;
    }
    public String getSub() {
        return sub;
    }
    public AccessToken setCid(String cid) {
        this.cid = cid;
        return this;
    }
    public String getCid() {
        return cid;
    }
    public AccessToken setUid(String uid) {
        this.uid = uid;
        return this;
    }
    public String getUid() {
        return uid;
    }
    public AccessToken setScp(List<String> scp) {
        this.scp = scp;
        return this;
    }
    public List<String> getScp() {
        return scp;
    }

    @Override
    public boolean equals(Object another) {
        if (this != another) {
            if (another == null || another.getClass() != AccessToken.class) {
                return false;
            }
            AccessToken a = (AccessToken) another;
            if (ver != a.ver) {
                return false;
            }
            if (aud == null ? a.aud != null : !aud.equals(a.aud)) {
                return false;
            }
            if (exp != a.exp) {
                return false;
            }
            if (iat != a.iat) {
                return false;
            }
            if (iss == null ? a.iss != null : !iss.equals(a.iss)) {
                return false;
            }
            if (sub == null ? a.sub != null : !sub.equals(a.sub)) {
                return false;
            }
            if (cid == null ? a.cid != null : !cid.equals(a.cid)) {
                return false;
            }
            if (uid == null ? a.uid != null : !uid.equals(a.uid)) {
                return false;
            }
            if (scp == null ? a.scp != null : !scp.equals(a.scp)) {
                return false;
            }
        }
        return true;
    }
}
