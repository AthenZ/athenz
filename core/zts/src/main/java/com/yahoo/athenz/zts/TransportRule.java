//
// This file generated by rdl 1.5.2. Do not modify!
//

package com.yahoo.athenz.zts;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.yahoo.rdl.*;

//
// TransportRule -
//
@JsonIgnoreProperties(ignoreUnknown = true)
public class TransportRule {
    public String endPoint;
    public String sourcePortRange;
    public int port;
    public String protocol;
    public TransportDirection direction;

    public TransportRule setEndPoint(String endPoint) {
        this.endPoint = endPoint;
        return this;
    }
    public String getEndPoint() {
        return endPoint;
    }
    public TransportRule setSourcePortRange(String sourcePortRange) {
        this.sourcePortRange = sourcePortRange;
        return this;
    }
    public String getSourcePortRange() {
        return sourcePortRange;
    }
    public TransportRule setPort(int port) {
        this.port = port;
        return this;
    }
    public int getPort() {
        return port;
    }
    public TransportRule setProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }
    public String getProtocol() {
        return protocol;
    }
    public TransportRule setDirection(TransportDirection direction) {
        this.direction = direction;
        return this;
    }
    public TransportDirection getDirection() {
        return direction;
    }

    @Override
    public boolean equals(Object another) {
        if (this != another) {
            if (another == null || another.getClass() != TransportRule.class) {
                return false;
            }
            TransportRule a = (TransportRule) another;
            if (endPoint == null ? a.endPoint != null : !endPoint.equals(a.endPoint)) {
                return false;
            }
            if (sourcePortRange == null ? a.sourcePortRange != null : !sourcePortRange.equals(a.sourcePortRange)) {
                return false;
            }
            if (port != a.port) {
                return false;
            }
            if (protocol == null ? a.protocol != null : !protocol.equals(a.protocol)) {
                return false;
            }
            if (direction == null ? a.direction != null : !direction.equals(a.direction)) {
                return false;
            }
        }
        return true;
    }
}
