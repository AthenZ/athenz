// Copyright The Athenz Authors
// Licensed under the terms of the Apache version 2.0 license. See LICENSE file for terms.

include "Names.tdl";

type ExternalCredentialsRequest Struct {
    ServiceName clientId; //client id to be referenced in the ID token as audience
    Int32 expiryTime (optional); //optional expiry period specified in seconds
    Map<String, String> attributes (optional); //credential request attributes
}

type ExternalCredentialsResponse Struct {
    Map<String, String> attributes; //credential response attributes
    Timestamp expiration (optional); //credential expiry timestamp
}

// request external credentials from the specified provider based on
// the specified request attributes and the principal's id token
// (that will be internally generated by ZTS). Based on the provider,
// the server will carry out internal authorization checks (e.g. is the
// principal authorized to request a given scope in the credentials).
resource ExternalCredentialsResponse POST "/external/{provider}/domain/{domainName}/creds" {
    SimpleName provider; //provider name to request credentials from
    DomainName domainName; //request credentials from account/project associated with this athenz domain
    ExternalCredentialsRequest request; //request object with optional and required attributes
    authenticate;
    expected OK;
    exceptions {
        ResourceError BAD_REQUEST;
        ResourceError FORBIDDEN;
        ResourceError UNAUTHORIZED;
    }
}
