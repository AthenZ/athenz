name: Publish Athenz packages to Maven Central

on:
  push:
    tags:
      - 'v1.12.*'

env:
  GOLANG_VERSION: 1.22
  NODEJS_VERSION: 18
  JAVA_VERSION_SERVER_BUILD: 17
  JAVA_VERSION_CLIENT_BUILD: 11
  JAVA_DISTRO: temurin
  JAVA_ARCH: x64

jobs:
  server-publish:
    runs-on: ubuntu-latest-4-cores
    steps:
      - name: Checkout repository
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Golang
        id: setup-go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Setup Node
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}

      - name: Setup Java
        id: setup-java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION_SERVER_BUILD }}
          distribution: ${{ env.JAVA_DISTRO }}
          architecture: ${{ env.JAVA_ARCH }}
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_SIGNING_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Build and Publish Server Modules
        run: actions/scripts/publish.sh server
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_TOKEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_TOKEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_SIGNING_KEY_PASSWORD }}

  client-publish:
    runs-on: ubuntu-latest-4-cores
    steps:
      - name: Checkout repository
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Golang
        id: setup-go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Setup Java
        id: setup-java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION_CLIENT_BUILD }}
          distribution: ${{ env.JAVA_DISTRO }}
          architecture: ${{ env.JAVA_ARCH }}
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_SIGNING_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Build and Publish Client Modules
        run: actions/scripts/publish.sh client
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_TOKEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_TOKEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_SIGNING_KEY_PASSWORD }}
