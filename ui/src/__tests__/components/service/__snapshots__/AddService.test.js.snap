// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddService should render 1`] = `
.emotion-0 {
  width: 100%;
  text-align: left;
  background-color: #fff;
}

.emotion-2 {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex-flow: row nowrap;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  padding: 10px 30px;
}

.emotion-4 {
  font-size: 14px;
  font-weight: 600;
  color: #303030;
  line-height: 36px;
  white-space: nowrap;
}

.emotion-5 {
  -webkit-flex: 0 0 100px;
  -ms-flex: 0 0 100px;
  flex: 0 0 100px;
  margin-right: 2%;
}

.emotion-7 {
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  margin-right: 10px;
}

.emotion-9 {
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-flex-flow: row nowrap;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  font-family: Helvetica,Arial,sans-serif;
  font-size: 14px;
  font-weight: 300;
  position: relative;
  width: 250px;
}

.emotion-9 input {
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  background: rgba(53,112,244,0.05);
  border-top: 2px solid transparent;
  border-bottom: 2px solid transparent;
  border-right: transparent;
  border-left: transparent;
  border-radius: 2px;
  box-shadow: none;
  box-sizing: border-box;
  color: #303030;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  font: inherit;
  height: 36px;
  margin: 0;
  outline: none;
  padding: 0 1rem;
  text-align: left;
  width: 100%;
}

.emotion-9.animated input {
  -webkit-transition: background-color 0.2s ease-in-out,color 0.2s ease-in-out,border 0.2s ease-in-out;
  transition: background-color 0.2s ease-in-out,color 0.2s ease-in-out,border 0.2s ease-in-out;
}

.emotion-9 input::-webkit-input-placeholder {
  color: rgba(48,48,48,0.6);
}

.emotion-9 input::-moz-placeholder {
  color: rgba(48,48,48,0.6);
}

.emotion-9 input:-ms-input-placeholder {
  color: rgba(48,48,48,0.6);
}

.emotion-9 input::placeholder {
  color: rgba(48,48,48,0.6);
}

.emotion-9 input.focused,
.emotion-9 input:active,
.emotion-9 input:focus {
  background: rgba(53,112,244,0.05);
  border-bottom: 2px solid #3570f4;
  color: #303030;
}

.emotion-9 input:invalid {
  background: rgba(53,112,244,0.05);
  border-bottom: 2px solid #d01111;
  color: #303030;
}

.emotion-9 .message {
  font-size: 12px;
  left: 0;
  line-height: 1.8;
  position: absolute;
  top: 2.571rem;
}

.emotion-9.error input,
.emotion-9.error input.focused,
.emotion-9.error input:active,
.emotion-9.error input:focus {
  border-bottom: 2px solid #d01111;
}

.emotion-9.error .message {
  color: #d01111;
}

.emotion-10 {
  width: 500px;
}

.emotion-24 {
  -webkit-flex: 0 0 100px;
  -ms-flex: 0 0 100px;
  flex: 0 0 100px;
  margin-right: 2%;
  font-size: 14px;
  font-weight: 600;
  color: #303030;
  line-height: 36px;
  white-space: nowrap;
}

.emotion-28 {
  width: 500px;
}

.emotion-30 {
  color: #3570f4;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.emotion-49 {
  font-family: Helvetica,Arial,sans-serif;
  font-size: 14px;
  font-weight: 300;
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-flex-flow: column nowrap;
  -webkit-flex-flow: column nowrap;
  -ms-flex-flow: column nowrap;
  flex-flow: column nowrap;
  position: relative;
  width: 500px;
}

.emotion-49>textarea {
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  background: rgba(53,112,244,0.05);
  border-top: 2px solid transparent;
  border-bottom: 2px solid transparent;
  border-right: transparent;
  border-left: transparent;
  border-radius: 2px;
  box-shadow: none;
  box-sizing: border-box;
  color: #303030;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  font: inherit;
  height: auto;
  line-height: 1.5;
  margin: 0;
  outline: none;
  padding: 0.25em 0.75rem;
  text-align: left;
  -webkit-transition: background-color 0.2s ease-in-out,color 0.2s ease-in-out,border 0.2s ease-in-out;
  transition: background-color 0.2s ease-in-out,color 0.2s ease-in-out,border 0.2s ease-in-out;
  width: auto;
}

.emotion-49>textarea::-webkit-input-placeholder {
  color: rgba(48,48,48,0.6);
}

.emotion-49>textarea::-moz-placeholder {
  color: rgba(48,48,48,0.6);
}

.emotion-49>textarea:-ms-input-placeholder {
  color: rgba(48,48,48,0.6);
}

.emotion-49>textarea::placeholder {
  color: rgba(48,48,48,0.6);
}

.emotion-49>textarea:active,
.emotion-49>textarea:focus {
  background: rgba(53,112,244,0.05);
  border-bottom: 2px solid #3570f4;
  color: #303030;
}

.emotion-49>textarea:invalid {
  background: rgba(53,112,244,0.05);
  border-bottom: 2px solid #d01111;
  color: #303030;
}

.emotion-49>textarea[disabled] {
  background: rgba(48,48,48,0.05);
  border-bottom: 2px solid rgba(48,48,48,0.05);
  color: rgba(48,48,48,0.25);
  cursor: not-allowed;
}

.emotion-49 .message {
  font-size: 12px;
  color: #303030;
  left: 0;
  line-height: 1.8;
  position: absolute;
  top: 2.571rem;
}

.emotion-50>textarea {
  resize: vertical;
}

<div
  autocomplete="off"
  class="emotion-0 emotion-1"
  data-testid="add-service-form"
>
  <div
    class="emotion-2 emotion-3"
  >
    <label
      class="emotion-4 denali-input-label emotion-5 emotion-6"
      for="service-name"
    >
      Service Name
    </label>
    <div
      class="emotion-7 emotion-8"
    >
      <div
        class="emotion-9 denali-input animated emotion-10 emotion-11"
        data-testid="input-wrapper"
      >
        <input
          autocomplete="off"
          data-testid="input-node"
          id="service-name"
          name="service-name"
          value=""
        />
        <div
          class="message"
          data-testid="message"
        />
      </div>
    </div>
  </div>
  <div
    class="emotion-2 emotion-3"
  >
    <label
      class="emotion-4 denali-input-label emotion-5 emotion-6"
      for="description"
    >
      Description
    </label>
    <div
      class="emotion-7 emotion-8"
    >
      <div
        class="emotion-9 denali-input animated emotion-10 emotion-11"
        data-testid="input-wrapper"
      >
        <input
          autocomplete="off"
          data-testid="input-node"
          id="description"
          name="description"
          value=""
        />
        <div
          class="message"
          data-testid="message"
        />
      </div>
    </div>
  </div>
  <div
    class="emotion-2 emotion-3"
  >
    <div
      class="emotion-24 emotion-25"
    >
      NOTE
    </div>
    <div
      class="emotion-7 emotion-8"
    >
      <div
        class="emotion-28 emotion-29"
      >
        Test Message
         
        Generate a
        <a
          class="emotion-30 emotion-31"
        >
           
          key pair
           
        </a>
        and add the public key below ONLY if you are not utilizing those.
      </div>
    </div>
  </div>
  <div
    class="emotion-2 emotion-33"
    data-testid="add-key-id"
  >
    <label
      class="emotion-4 denali-input-label emotion-5 emotion-36"
      for="key-id"
    >
      Public Key Id
    </label>
    <div
      class="emotion-7 emotion-38"
    >
      <div
        class="emotion-9 denali-input animated emotion-10 emotion-41"
        data-testid="input-wrapper"
      >
        <input
          autocomplete="off"
          data-testid="input-node"
          id="key-id"
          name="key-id"
          value=""
        />
        <div
          class="message"
          data-testid="message"
        />
      </div>
    </div>
  </div>
  <div
    class="emotion-2 emotion-33"
    data-testid="add-key-value"
  >
    <label
      class="emotion-4 denali-input-label emotion-5 emotion-36"
      for="key-value"
    >
      Key Value
    </label>
    <div
      class="emotion-7 emotion-38"
    >
      <div
        class="emotion-49 denali-textarea emotion-50 emotion-51"
        data-testid="textarea-wrapper"
      >
        <textarea
          data-testid="textarea"
          id="key-value"
          name="key-value"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`AddService should render error after addService throws error(other) 1`] = `
<div
  data-testid="error-message"
  name="red600"
  style="color: rgb(208, 17, 17); display: inline-block;"
>
  Status: 1. Message: test-error
</div>
`;

exports[`AddService should render error after addService throws error(refresh) 1`] = `
<div
  data-testid="error-message"
  name="red600"
  style="color: rgb(208, 17, 17); display: inline-block;"
>
  Session expired. Please refresh the page.
</div>
`;

exports[`AddService should render error if no key name specified 1`] = `
<div
  data-testid="error-message"
  name="red600"
  style="color: rgb(208, 17, 17); display: inline-block;"
>
  Service name is required.
</div>
`;

exports[`AddService should render error when after getService throws error(other) 1`] = `
<div
  data-testid="error-message"
  name="red600"
  style="color: rgb(208, 17, 17); display: inline-block;"
>
  Session expired. Please refresh the page.
</div>
`;

exports[`AddService should render error when service already exists 1`] = `
<div
  data-testid="error-message"
  name="red600"
  style="color: rgb(208, 17, 17); display: inline-block;"
>
  Status: 409. Message: Service test-name already exists
</div>
`;
