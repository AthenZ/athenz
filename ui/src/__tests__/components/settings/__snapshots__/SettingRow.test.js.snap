// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingRow should render input type setting row 1`] = `
.emotion-0 {
  box-sizing: border-box;
  margin-top: 10px;
  box-shadow: 0 1px 4px #d9d9d9;
  border: 1px solid #fff;
  -webkit-border-image: none;
  border-image: none;
  -webkit-border-image: initial;
  border-image: initial;
  height: 50px;
}

.emotion-2 {
  text-align: left;
  width: auto;
  padding: 5px 0 5px 15px;
  vertical-align: middle;
  word-break: break-all;
}

.emotion-6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-8 {
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-flex-flow: row nowrap;
  -webkit-flex-flow: row nowrap;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  font-family: Helvetica,Arial,sans-serif;
  font-size: 14px;
  font-weight: 300;
  position: relative;
  width: 100%;
}

.emotion-8 input {
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  background: rgba(53,112,244,0.05);
  border-top: 2px solid transparent;
  border-bottom: 2px solid transparent;
  border-right: transparent;
  border-left: transparent;
  border-radius: 2px;
  box-shadow: none;
  box-sizing: border-box;
  color: #303030;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  font: inherit;
  height: 36px;
  margin: 0;
  outline: none;
  padding: 0 1rem;
  text-align: left;
  width: 100%;
}

.emotion-8.animated input {
  -webkit-transition: background-color 0.2s ease-in-out,color 0.2s ease-in-out,border 0.2s ease-in-out;
  transition: background-color 0.2s ease-in-out,color 0.2s ease-in-out,border 0.2s ease-in-out;
}

.emotion-8 input::-webkit-input-placeholder {
  color: rgba(48,48,48,0.6);
}

.emotion-8 input::-moz-placeholder {
  color: rgba(48,48,48,0.6);
}

.emotion-8 input:-ms-input-placeholder {
  color: rgba(48,48,48,0.6);
}

.emotion-8 input::placeholder {
  color: rgba(48,48,48,0.6);
}

.emotion-8 input.focused,
.emotion-8 input:active,
.emotion-8 input:focus {
  background: rgba(53,112,244,0.05);
  border-bottom: 2px solid #3570f4;
  color: #303030;
}

.emotion-8 input:invalid {
  background: rgba(53,112,244,0.05);
  border-bottom: 2px solid #d01111;
  color: #303030;
}

.emotion-8 .message {
  font-size: 12px;
  left: 0;
  line-height: 1.8;
  position: absolute;
  top: 2.571rem;
}

.emotion-8.error input,
.emotion-8.error input.focused,
.emotion-8.error input:active,
.emotion-8.error input:focus {
  border-bottom: 2px solid #d01111;
}

.emotion-8.error .message {
  color: #d01111;
}

.emotion-9 {
  margin-top: 5px;
}

<tr
  class="emotion-0 emotion-1"
  data-testid="setting-row"
>
  <td
    class="emotion-2 emotion-3"
    width="auto"
  >
    Test
  </td>
  <td
    class="emotion-2 emotion-3"
    width="auto"
  >
    <div
      class="emotion-6 emotion-7"
    >
      <div
        class="emotion-8 denali-input animated emotion-9 emotion-10"
        data-testid="input-wrapper"
      >
        <input
          autocomplete="off"
          data-testid="input-node"
          id="setting-test"
          pattern="[0-9]*"
          value="15"
        />
        <div
          class="message"
          data-testid="message"
        />
      </div>
    </div>
  </td>
  <td
    class="emotion-2 emotion-3"
    width="auto"
  >
    desc for testing
  </td>
</tr>
`;

exports[`SettingRow should render switch type setting row 1`] = `
.emotion-0 {
  box-sizing: border-box;
  margin-top: 10px;
  box-shadow: 0 1px 4px #d9d9d9;
  border: 1px solid #fff;
  -webkit-border-image: none;
  border-image: none;
  -webkit-border-image: initial;
  border-image: initial;
  height: 50px;
}

.emotion-2 {
  text-align: left;
  width: auto;
  padding: 5px 0 5px 15px;
  vertical-align: middle;
  word-break: break-all;
}

.emotion-6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: 18px;
  outline: 0;
  position: relative;
}

.emotion-6>input[type='checkbox'] {
  box-sizing: border-box;
  cursor: pointer;
  position: absolute;
  top: 0;
  visibility: hidden;
}

.emotion-6>input[type='checkbox']+label {
  box-sizing: border-box;
  cursor: pointer;
  font-family: Helvetica,Arial,sans-serif;
  font-size: 14px;
  font-weight: 300;
  height: 18px;
  line-height: 18px;
  white-space: nowrap;
}

.emotion-6>input[type='checkbox']+label .label-content {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  margin-left: 6px;
}

@-moz-document url-prefix() {
  .emotion-6>input[type='checkbox']+label .label-content {
    margin-top: 1px;
  }
}

.emotion-6>input[type='checkbox']+label:before {
  background: #d5d5d5;
  border-radius: 9px;
  box-sizing: border-box;
  content: '';
  cursor: pointer;
  display: inline-block;
  height: 4px;
  line-height: 16px;
  margin: 7px 0 0 0;
  -webkit-transition: all 0.25s;
  transition: all 0.25s;
  vertical-align: top;
  width: 34px;
}

.emotion-6>input[type='checkbox']+label::after {
  background-color: #fff;
  border: 2px solid rgba(54,151,242,0.5);
  border-radius: 50%;
  box-sizing: border-box;
  content: ' ';
  cursor: pointer;
  display: block;
  height: 18px;
  left: 0;
  position: absolute;
  -webkit-transition: all 0.25s ease;
  transition: all 0.25s ease;
  top: 0;
  width: 18px;
}

.emotion-6>input[type='checkbox']:checked+label::before {
  background-color: rgba(21,192,70,0.45);
}

.emotion-6>input[type='checkbox']:checked+label::after {
  background-color: #15c046;
  border-color: #15c046;
  left: 16px;
}

.emotion-6>input[type='checkbox']:disabled+label {
  color: #9a9a9a;
  cursor: not-allowed;
}

.emotion-6>input[type='checkbox']:disabled+label::before {
  background-color: #e8e8e8;
  cursor: not-allowed;
}

.emotion-6>input[type='checkbox']:disabled+label::after {
  border-color: #d5d5d5;
  cursor: not-allowed;
}

.emotion-6>input[type='checkbox']:checked:disabled+label::after {
  background: #d5d5d5;
}

<tr
  class="emotion-0 emotion-1"
  data-testid="setting-row"
>
  <td
    class="emotion-2 emotion-3"
    width="auto"
  >
    Test
  </td>
  <td
    class="emotion-2 emotion-3"
    width="auto"
  >
    <div
      class="emotion-6 denali-switch"
      data-testid="switch-wrapper"
    >
      <input
        checked=""
        data-testid="settingtest-switch-input"
        id="switch-settingtest"
        name="settingtest"
        type="checkbox"
        value="true"
      />
      <label
        for="switch-settingtest"
      />
    </div>
  </td>
  <td
    class="emotion-2 emotion-3"
    width="auto"
  >
    desc for testing
  </td>
</tr>
`;
